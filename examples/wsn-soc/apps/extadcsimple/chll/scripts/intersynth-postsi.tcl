#!trfsmgen
#
# Generate InterSynth netlist
#

# get data from outside this script
set APP_NAME        "$env(APP_NAME)"
set APP_NAME_LC     "$env(APP_NAME_LC)"
set APP_ILANG_OUT   "$env(APP_ILANG_OUT)"
set APP_OUT_DIR     "$env(APP_OUT_DIR)"
set RECONF_BASE     "$env(RECONF_BASE)"
set CELLLIB_BASE    "$env(CELLLIB_BASE)"
set INTERSYNTH_FILE "$env(INTERSYNTH_FILE)"

# setup whole reconf.module
source $RECONF_BASE/chll/scripts/setup-reconf-module.tcl
# setup cell library
source $RECONF_BASE/chll/scripts/setup-celllib.tcl
# read TR-FSM wrapper cells using this auto-generated script by
# setup-trfsms.tcl invoked by "flowcmd insert-trfsms"
source $RECONF_BASE/chll/out/setup-trfsm-cells.tcl
# setup application
set SCRIPT_BASE [file dirname [info script]]
source $SCRIPT_BASE/setup.tcl

# Read and check synthesized netlist
app_read_netlist -extracted $APP_ILANG_OUT

puts ""
puts "##############################################################################################"
list_apps
#app_show -all

# show all cell instances
puts ""
puts "##############################################################################################"
puts "## Resources #################################################################################"
puts "##############################################################################################"
puts ""
app_print_usage -all
puts ""
puts "##############################################################################################"
puts ""

puts "## Setting interconnect tree parameters for each connection type"
source $RECONF_BASE/chll/scripts/setup-conntype-trees.tcl

puts ""
puts "##############################################################################################"

puts "## Writing netlist for InterSynth"
write_intersynth -netlist "$APP_NAME" -o "$APP_OUT_DIR/postsilicon-app.txt"

set Name [get_reconf_module -istypename]

set StatsFile "$APP_OUT_DIR/intersynth-stats.txt"

puts "## Writing command file for InterSynth to $INTERSYNTH_FILE"
set of [open "$INTERSYNTH_FILE" "w"]
puts $of "#!intersynth"
puts $of "#"
puts $of "# Optimize interconnect for example netlists"
puts $of "#"
puts $of "# Auto-generated by [info script]"
puts $of "#"
puts $of ""
puts $of "# Read base information"
puts $of "load $RECONF_BASE/chll/out/presilicon-baseconfig.txt"
puts $of "# Read netlists of application (must be before cellmapping!)"
puts $of "load $APP_OUT_DIR/postsilicon-app.txt"
puts $of "# Read cell mapping"
puts $of "load $RECONF_BASE/chll/out/presilicon-cellmapping.txt"
puts $of ""
puts $of "### Map to interconnect ##################################################"
puts $of "# postsilicon <iterations> <hill-limit> \[<retries>\]"
puts $of "postsilicon 6 20"
puts $of ""
puts $of "# Print some information"
puts $of "stats"
puts $of "stats $StatsFile"
puts $of ""
puts $of "# Save results"
puts $of "write_data $APP_OUT_DIR/postsilicon-netlist-$APP_NAME_LC.txt netlist $APP_NAME"
puts $of "write_bitdata $APP_OUT_DIR/postsilicon-bitdata-$APP_NAME_LC.cfg netlist $APP_NAME"
puts $of "write_graphviz $APP_OUT_DIR/postsilicon-netlist-$APP_NAME_LC.dot"
foreach {ConnType Trees} [array get ConnTypeTrees] {
  for {set Tree 0} {$Tree < $Trees} {incr Tree} {
    puts $of "write_tikz $APP_OUT_DIR/postsilicon-tree-$APP_NAME_LC-$ConnType-$Tree.tex $APP_NAME $ConnType $Tree"
  }
}
puts $of "write_html $APP_OUT_DIR/postsilicon.html"
puts $of "write_tcl $APP_OUT_DIR/postsilicon.tcl"                 ;# \[ prefix <prefix> \]"
puts $of "write_data /tmp/hansi.txt baseconfig cellmapping nodemapping"
close $of

# Create LaTeX file which includes the TikZ images of all trees
set of [open "$APP_OUT_DIR/postsilicon-trees-$APP_NAME_LC.tex" "w"]
puts $of "\\documentclass\[landscape\]{article}"
puts $of "\\usepackage\[a3paper,margin=1.5cm\]{geometry}"
puts $of "\\usepackage{tikz}"
puts $of "\\usetikzlibrary{external}"
puts $of "% If your pictures are too big, enable externalization and use the"
puts $of "% individual files. Don't forget to add the -shell-escape switch to pdflatex"
puts $of "%\\tikzexternalize\["
puts $of "%  prefix=postsilicon-trees/"
puts $of "%\]"
puts $of "\\begin{document}"
puts $of ""
puts $of "% make '_' no longer have a special meaning"
puts $of "\\catcode`\\_=12"
puts $of ""
foreach {ConnType Trees} [array get ConnTypeTrees] {
  for {set Tree 0} {$Tree < $Trees} {incr Tree} {
    puts $of "\\section{$APP_NAME: $ConnType\[$Tree\]}"
    puts $of "\\tikzsetnextfilename{postsilicon-tree-$APP_NAME_LC-$ConnType-$Tree}"
    puts $of "\\begin{tikzpicture}"
    puts $of "\\input{$APP_OUT_DIR/postsilicon-tree-$APP_NAME_LC-$ConnType-$Tree.tex}"
    puts $of "\\end{tikzpicture}"
    puts $of ""
  }
}
puts $of "\\end{document}"
close $of

puts ""
puts "## Done."
