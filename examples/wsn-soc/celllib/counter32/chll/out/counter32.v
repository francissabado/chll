/* Generated by Yosys 0.3.0+621 (git sha1 74ef92b, clang 3.3-16 -fPIC -Os) */

(* src = "../../verilog/counter32.v:1" *)
module Counter32(Reset_n_i, Clk_i, ResetSig_i, Preset_i, Enable_i, Direction_i, PresetValH_i, PresetValL_i, DH_o, DL_o, Overflow_o, Zero_o);
  (* intersynth_port = "Reset_n_i" *)
  (* src = "../../verilog/counter32.v:3" *)
  input Reset_n_i;
  (* intersynth_port = "Clk_i" *)
  (* src = "../../verilog/counter32.v:5" *)
  input Clk_i;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:7" *)
  input ResetSig_i;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:9" *)
  input Preset_i;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:11" *)
  input Enable_i;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:13" *)
  input Direction_i;
  (* intersynth_conntype = "Word" *)
  (* src = "../../verilog/counter32.v:15" *)
  input [15:0] PresetValH_i;
  (* intersynth_conntype = "Word" *)
  (* src = "../../verilog/counter32.v:17" *)
  input [15:0] PresetValL_i;
  (* intersynth_conntype = "Word" *)
  (* src = "../../verilog/counter32.v:19" *)
  output [15:0] DH_o;
  (* intersynth_conntype = "Word" *)
  (* src = "../../verilog/counter32.v:21" *)
  output [15:0] DL_o;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:23" *)
  output Overflow_o;
  (* intersynth_conntype = "Bit" *)
  (* src = "../../verilog/counter32.v:25" *)
  output Zero_o;
  (* src = "../../verilog/counter32.v:28" *)
  wire [32:0] Value;
  (* src = "../../verilog/counter32.v:30" *)
  wire [32:0] \$0\Value[32:0] ;
  (* src = "../../verilog/counter32.v:45" *)
  wire [32:0] \$add$../../verilog/counter32.v:45$4_Y ;
  (* src = "../../verilog/counter32.v:47" *)
  wire [32:0] \$sub$../../verilog/counter32.v:47$5_Y ;
  wire [32:0] \$procmux$20_Y ;
  wire [32:0] \$procmux$22_Y ;
  wire [32:0] \$procmux$25_Y ;
  (* src = "../../verilog/counter32.v:45" *)
  \$add  #(
    .A_SIGNED(32'b00000000000000000000000000000000),
    .A_WIDTH(32'b00000000000000000000000000100001),
    .Y_WIDTH(32'b00000000000000000000000000100001),
    .B_SIGNED(32'b00000000000000000000000000000000),
    .B_WIDTH(32'b00000000000000000000000000000001)
  ) \$add$../../verilog/counter32.v:45$4  (
    .A({ 1'b0, Value[31:0] }),
    .Y(\$add$../../verilog/counter32.v:45$4_Y ),
    .B(1'b1)
  );
  (* src = "../../verilog/counter32.v:47" *)
  \$sub  #(
    .A_SIGNED(32'b00000000000000000000000000000000),
    .A_WIDTH(32'b00000000000000000000000000100001),
    .Y_WIDTH(32'b00000000000000000000000000100001),
    .B_SIGNED(32'b00000000000000000000000000000000),
    .B_WIDTH(32'b00000000000000000000000000000001)
  ) \$sub$../../verilog/counter32.v:47$5  (
    .A({ 1'b0, Value[31:0] }),
    .Y(\$sub$../../verilog/counter32.v:47$5_Y ),
    .B(1'b1)
  );
  (* src = "../../verilog/counter32.v:55" *)
  \$eq  #(
    .A_SIGNED(32'b00000000000000000000000000000000),
    .A_WIDTH(32'b00000000000000000000000000100000),
    .Y_WIDTH(32'b00000000000000000000000000000001),
    .B_SIGNED(32'b00000000000000000000000000000000),
    .B_WIDTH(32'b00000000000000000000000000100000)
  ) \$eq$../../verilog/counter32.v:55$6  (
    .A(Value[31:0]),
    .Y(Zero_o),
    .B(32'd0)
  );
  \$mux  #(
    .WIDTH(32'b00000000000000000000000000100001)
  ) \$procmux$20  (
    .A(\$add$../../verilog/counter32.v:45$4_Y ),
    .Y(\$procmux$20_Y ),
    .B(\$sub$../../verilog/counter32.v:47$5_Y ),
    .S(Direction_i)
  );
  \$mux  #(
    .WIDTH(32'b00000000000000000000000000100001)
  ) \$procmux$22  (
    .A(Value),
    .Y(\$procmux$22_Y ),
    .B(\$procmux$20_Y ),
    .S(Enable_i)
  );
  \$mux  #(
    .WIDTH(32'b00000000000000000000000000100001)
  ) \$procmux$25  (
    .A(\$procmux$22_Y ),
    .Y(\$procmux$25_Y ),
    .B({ 1'b0, PresetValH_i, PresetValL_i }),
    .S(Preset_i)
  );
  \$mux  #(
    .WIDTH(32'b00000000000000000000000000100001)
  ) \$procmux$28  (
    .A(\$procmux$25_Y ),
    .Y(\$0\Value[32:0] ),
    .B(33'b000000000000000000000000000000000),
    .S(ResetSig_i)
  );
  (* src = "../../verilog/counter32.v:30" *)
  \$adff  #(
    .WIDTH(32'b00000000000000000000000000100001),
    .ARST_POLARITY(1'b0),
    .ARST_VALUE(33'b000000000000000000000000000000000),
    .CLK_POLARITY(1'b1)
  ) \$procdff$39  (
    .D(\$0\Value[32:0] ),
    .Q(Value),
    .ARST(Reset_n_i),
    .CLK(Clk_i)
  );
  assign DH_o = Value[31:16];
  assign DL_o = Value[15:0];
  assign Overflow_o = Value[32];
endmodule
